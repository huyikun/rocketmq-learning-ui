---
import BaseContainer from "@components/common/BaseContainer.astro";
import ArticleCard from "@/components/home/ArticleByTag/ArticleCard.astro";
import type { Post } from "@/types";
import { useTranslations } from "@i18n/util";
const t = useTranslations(Astro);
interface Props {
  pageList: Post[];
  source?: string;
  className?: string;
  tag?: string;
}

const {
  pageList,
  source = "home",
  className = "",
  tag = "",
} = Astro.props as Props;

// Get word for mdx
const getExcerpt = (content, length = 200, defaultExcerpt = "") => {
  try {
    const strippedContent = content.replace(/(<([^>]+)>)/gi, "");
    const plainText = strippedContent.replace(
      /[#>*-]|\[.*?\]\(.*?\)|\!\[.*?\]\(.*?\)/g,
      ""
    );
    return plainText;
  } catch (error) {
    return defaultExcerpt;
  }
};
let items = [];
if (pageList && pageList.length) {
  if (source == "home") {
    if (tag) {
      items = pageList
        .filter((it) => it?.data?.tags.includes("home"))
        .slice(0, 3);
    } else {
      items = pageList.slice(0, 3);
    }

    items.forEach((item) => {
      item.excerpt = getExcerpt(item.body, 200, item.data?.description);
    });
  } else {
    items = pageList;
    items.forEach((item) => {
      item.excerpt = getExcerpt(item.body, 200, item.data?.description);
    });
  }
}
---

<!-- <div class="flex justify-between">
  <div
    class="max-w-[200px] min-w-[200px] hidden 2xl:block xl:block lg:block relative mr-[1.5rem]"
  >
    <div class="sticky top-[100px] text-title">
      {
        pageList && pageList.length ? (
          <div class="text-lg text-gray-08 mb-[32px]">
            {t("commmon.header.comm.article")}
          </div>
        ) : null
      }
      <div class="text-[16px] text-gray-14 user-config-h-list">
        {
          pageList.map((post) => {
            return (
              <a
                class="no-underline font-normal block mb-[24px] pagelist-a hover:font-bold duration-100 break-all"
                href={`#${post.slug}`}
              >
                {post.data.title}
              </a>
            );
          })
        }
      </div>
    </div>
  </div> -->
  <div>
    {
      items.map((post) => (
        <ArticleCard
          post={post as Post}
          source={source}
          useAnchor={true}
          class={className}
          tag={tag}
        />
      ))
    }
  </div>
<!-- </div> -->
<!-- <style>
  .user-config-h-list {
    max-height: calc(100vh - 180px);
    overflow: scroll;
    scrollbar-color: theme("colors.success") theme("colors.error");
  }
</style> -->
