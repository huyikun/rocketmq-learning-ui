---
interface Props {
  useduration?: string; // 是否启用自动轮播  apply / disabled
  duration?: number; // 图片轮播时间 例如: 1000。 （组件默认 5000s）
}

const { duration = 5000, useduration = "disabled" } = Astro.props as Props;
---

<div
  id="carousel-wrapper"
  class="relative overflow-hidden flex flex-col justify-center items-center"
  data-duration={duration}
  data-useduration={useduration}
>
  <div class="w-full flex carousel-container">
    <div class="carousel-item bg-[#040303]">
      <div
        class="intro-pic bg-[url('https://img.alicdn.com/imgextra/i3/O1CN01mriyna1Hxtj7kffLh_!!6000000000825-2-tps-2880-792.png')]"
      >
        <slot name="prev" />
      </div>
    </div>
    <div class="carousel-item bg-[#1B1B1B]">
      <a
        target="_blank"
        href="https://www.aliyun.com/product/rocketmq"
        class="intro-pic block bg-[url('https://img.alicdn.com/imgextra/i1/O1CN01LgWjcp1LDPzuluiYp_!!6000000001265-0-tps-2880-792.jpg')]"
      >
        <slot name="next" />
      </a>
    </div>
  </div>
  <div class="dot-container">
    <span class="dot dot-active"></span>
    <span class="dot"></span>
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    let slideIndex = 0;
    let intervalId = null;
    let slideWidth = 0;
    const slides = document.querySelector(".carousel-container");
    const dots = document.querySelectorAll(".dot");

    dots.forEach((dot, i) => {
      dot.addEventListener("click", () => {
        currentSlide(i);
      });
    });

    function init() {
      slideWidth = slides.firstElementChild.clientWidth;
      resetInterval();
      window.addEventListener("resize", handleResize);
    }

    function currentSlide(n) {
      slideIndex = n;
      updateSlides();
      updateDots(); // 更新点控制器状态
      resetInterval(); // 用户点击 dot 后重新计时
    }

    function updateDots() {
      dots.forEach((dot, index) => {
        if (index === slideIndex) {
          dot.classList.add("dot-active");
        } else {
          dot.classList.remove("dot-active");
        }
      });
    }

    function updateSlides() {
      const offset = -slideIndex * slideWidth;
      slides.style.transform = `translateX(${offset}px)`;
    }

    // 自动播放
    function toggleSlide() {
      slideIndex = (slideIndex + 1) % dots.length;
      updateSlides();
      updateDots();
    }

    function resetInterval() {
      clearInterval(intervalId); // 清除现有的定时器
      intervalId = setInterval(toggleSlide, 5000); // 重新设定定时器
    }

    function handleResize() {
      slideWidth = slides.firstElementChild.clientWidth; // 更新幻灯片宽度
      updateSlides(); // 重新定位幻灯片位置
    }

    init(); // 初始化轮播图
  });
</script>
<style is:global>
  .carousel-container {
    transition: transform 0.5s ease;
  }
  .carousel-item {
    flex: 0 0 100%;
  }
  .dot-container {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
  }

  .dot {
    height: 10px;
    width: 10px;
    margin: 0 5px;
    background-color: #717171;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .dot-active {
    background-color: #f4f4f6;
  }
  .intro-pic {
    width: 90rem;
    height: 396px;
    margin: 0 auto;
    background-size: cover; /* 图像填充整个容器 */
    background-position: center; /* 图像在容器内居中 */
  }
</style>
